/*
我们把数组 A 中符合下列属性的任意连续子数组 B 称为 “山脉”：

B.length >= 3
存在 0 < i < B.length - 1 使得 B[0] < B[1] < ... B[i-1] < B[i] > B[i+1] > ... > B[B.length - 1]
（注意：B 可以是 A 的任意子数组，包括整个数组 A。）

给出一个整数数组 A，返回最长 “山脉” 的长度。
如果不含有 “山脉” 则返回 0。

示例 1：

输入：[2,1,4,7,3,2,5]
输出：5
解释：最长的 “山脉” 是 [1,4,7,3,2]，长度为 5。
示例 2：

输入：[2,2,2]
输出：0
解释：不含 “山脉”。
 
提示：
0 <= A.length <= 10000
0 <= A[i] <= 10000
*/

/**
 * @param {number[]} A
 * @return {number}
 */
var longestMountain = function(A) {
    let result = []
    let temp = []

   for (var i = 0; i < A.length-1; i++) {

       if (A[i] < A[i+1]) {
            temp.push(A[i])
       };
       if (A[i] >= A[i+1] && temp.length>0) {
            temp.push(A[i]);

            if (A[i] == A[i+1]) {
                if(temp.length > 2 && temp[temp.length-1] < temp[temp.length-2]){
                    result.push(temp);
                }
                temp = [];
                continue;

            };

            let j = i + 1;

            while(A[j]>A[j+1]){
                temp.push(A[j]);
                j++;
            }
            temp.push(A[j])
            result.push(temp);
            temp = [];
       };
   };

   result.sort((a,b)=>{return b.length - a.length})
   return result.length>0?result[0].length:0;
};