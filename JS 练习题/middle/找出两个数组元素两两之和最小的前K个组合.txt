/*示例 2:

输入: nums1 = [1,1,2], nums2 = [1,2,3], k = 2
输出: [1,1],[1,1]
解释: 返回序列中的前 2 对数：
     [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]
     */

/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @param {number} k
 * @return {number[][]}
 */
var kSmallestPairs = function(nums1, nums2, k) {
    let k1 = nums1.length*nums2.length<k?nums1.length*nums2.length:k
    let arr = []
    nums1.forEach((item1,index)=>{
        nums2.forEach((item2,index)=>{
            arr.push([item1,item2])
        })
    })
    return arr.sort((a,b)=>{
        return a[0]+a[1]-b[0]-b[1]
    }).slice(0,k1)
};