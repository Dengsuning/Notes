Method Draw svg在线编辑器
http://editor.method.ac/
web技术文档
https://developer.mozilla.org/zh-CN/docs/Web


SVG 意为可缩放矢量图形（Scalable Vector Graphics）。
SVG 是使用 XML 来描述二维图形和绘图程序的语言。
SVG 使用 XML 格式定义图像。
由于SVG是XML文件，SVG图像可以用任何文本编辑器创建，但它往往是与一个绘图程序一起使用，如Inkscape，更方便地创建SVG图像。


<?xml version="1.0" standalone="no" ?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1">
    <circle cx="100" cy="50" r="40" stroke="black" stroke-width="2" fill="red"/>
</svg>
第一行包含了 XML 声明。请注意 standalone 属性！该属性规定此 SVG 文件是否是"独立的"，或含有对外部文件的引用。
standalone="no" 意味着 SVG 文档会引用一个外部文件 - 在这里，是 DTD 文件。
第二和第三行引用了这个外部的 SVG DTD。该 DTD 位于 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"。该 DTD 位于 W3C，含有所有允许的 SVG 元素。

xmlns:命名空间
version:svg版本
circle:圆形元素标签
cx,cy:圆心坐标，默认(0,0)
stroke:指定描边方式
stroke-width:描边宽度
fill:图形填充方式

SVG 文件可通过以下标签嵌入 HTML 文档：<embed>、<object> 或者 <iframe>。
SVG的代码可以直接嵌入到HTML页面中，或您可以直接链接到SVG文件。

<embed src="circle1.svg" type="image/svg+xml">
<iframe src="circle1.svg"></iframe>
所有主流浏览器均支持，并允许使用脚本，不推荐在HTML4、XHTML中使用
<object data="circle1.svg" type="image/svg+xml"></object>
所有主流浏览器都支持但不允许使用脚本，支持HTML4、XHTML、html5

SVG Shapes
大多属性都可作为标签属性，也可写到style中，以下两种写法效果相同
但一般将样式属性写在style中，位置大小属性写在标签中
<rect x="20" y="0" rx="75" ry="75" width="150" height="150" fill="rgb(0,0,0)"  />
<rect style="x:20;y:0;rx:75;ry:75;width:150;height:150;fill:rgb(0,0,0)" />
x/y
rx/ry
width/height
fill/fill-opacity(0-1)
stroke/stroke-width/stroke-opacity(0-1)
opacity(0-1)

<circle cx="20" cy="50" r="40" stoke="red" stroke-width="5" fill=""yellow"/>
cx/cy/r
fill/fill-opacity(0-1)
stroke/stroke-width/stroke-opacity(0-1)
opacity

<ellipse cx="300" cy="80" rx="100" ry="50"
  style="fill:yellow;stroke:purple;stroke-width:2"/>
cx/cy
rx/ry

<line x1="0" y1="0" x2="200" y2="200" style="stroke: red;stroke-width:2"
x1/y1 起点
x2/y2 终点

<polygon points="100,10 40,180 190,60 10,60 160,180"
  style="fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;" />

  points：多边形端点
  fill-rule:nonzero/evenodd
fill-rule属性用于指定使用哪一种算法去判断画布上的某区域是否属于该图形“内部” （内部区域将被填充）。
nonzero


字面意思是“非零”。按该规则，要判断一个点是否在图形内，从该点作任意方向的一条射线，然后检测射线与图形路径的交点情况。从0开始计数，路径从左向右穿过射线则计数加1，从右向左穿过射线则计数减1。得出计数结果后，如果结果是0，则认为点在图形外部，否则认为在内部。下图演示了nonzero规则:
evenodd

字面意思是“奇偶”。按该规则，要判断一个点是否在图形内，从该点作任意方向的一条射线，然后检测射线与图形路径的交点的数量。如果结果是奇数则认为点在内部，是偶数则认为点在外部。下图演示了evenodd 规则:


<polyine points="20,20 40,25 60,40 80,120 120,140 200,180"
  style="fill:none;stroke:black;stroke-width:3"/>







svg命名空间
W3C的长期目标是使不同类型的基于XML的内容能在同一个XML文件中混合使用。
但是不同的XML方言可能含有相同的标签，例如svg和XHTML都有<title>标签，如何区分防止冲突是使用命名空间的主要目的。
<svg xmlns="http://www.w3.org/2000/svg"></svg>
命名空间声明由xmlns属性提供。此属性表示<svg>标记及其子标记属于名称空间为“http://www.w3.org/2000/svg”的XML方言
    命名空间声明只需要在根标记上提供一次。
    命名空间名称只是字符串，尽管SVG命名空间名称看起来像URI